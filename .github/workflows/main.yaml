name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-dockerhub:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/student_performance-app:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  Continuous-Deployment:
    needs: build-and-push-dockerhub
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Pull latest image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/student_performance-app:latest

      - name: Stop and remove existing container if running
        run: |
          docker ps -q --filter "name=my-app" | grep -q . && docker stop my-app && docker rm -fv my-app || true

      - name: Run Docker Container
        run: |
          docker run -d -p 8080:8080 --name=student_performance-app ${{ secrets.DOCKERHUB_USERNAME }}/student_performance-app:latest

      - name: Clean up old Docker images
        run: docker system prune -f
